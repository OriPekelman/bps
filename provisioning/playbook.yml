---
- hosts: all
  sudo: true
  gather_facts: true
  vars_files:
    - variables.yml

  tasks:
    #- hostname: name=bpsdev

    - name: update apt cache
      apt: update_cache=yes

    #- name: Upgrade apt cache
    #  apt: upgrade=yes

    - name: install required packages
      apt: name={{ item }} state=present
      with_items:
        - apache2
        - mysql-server
        - php5
        - php5-mysql
        - tomcat6
        - tomcat6-admin
        - openjdk-6-jre
        - openjdk-6-jdk
        - libapache2-mod-jk 
        - libmysql-java 
        - php-pear
        - git
        - maven

    - name: install MDB2 mysql support via PEAR
      command: pear install -a MDB2_Driver_mysql
      ignore_errors: yes

    - name: install HTTP_Request2 support via PEAR
      command: pear install HTTP_Request2
      ignore_errors: yes

    - name: enabled mod_rewrite
      apache2_module: name=rewrite state=present
      notify:
        - restart apache2

    - name: enabled mod_proxy
      apache2_module: name=proxy state=present
      notify:
        - restart apache2

    - name: enabled mod_proxy_http
      apache2_module: name=proxy_http state=present
      notify:
        - restart apache2

    - name: Create the project directory.
      file: state=directory path={{ project_root }}

    - name: Create the corpora directory.
      file: state=directory path={{ project_root }}/corpora

    - name: Create user.
      user: home={{ project_root }}/home/ name={{ user }} password={{ user_password }} state=present

    - name: Update the project directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path={{ project_root }}

    - name: Create the code directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path={{ project_root }}/code/

    - name: Create the SSH directory.
      file: state=directory path={{ project_root }}/home/.ssh/

    - name: Upload SSH known hosts.
      copy: src=files/ssh/known_hosts dest={{ project_root }}/home/.ssh/known_hosts mode=0600

    - name: Upload the private RSA SSH key.
      copy: src=files/ssh/id_rsa dest={{ project_root }}/home/.ssh/id_rsa mode=0600

    - name: Upload the public RSA SSH key.
      copy: src=files/ssh/id_rsa.pub dest={{ project_root }}/home/.ssh/id_rsa.pub mode=0600

    - name: Change permissions.
      shell: chown -R {{ user }}:{{ user }} {{ project_root }}

    - name: Pull sources from the repository.
      git: repo={{ project_repo }} dest={{ project_root }}/code version={{ branch }} accept_hostkey=yes
      sudo_user: "{{ user }}"

    - name: Create the webroot directory.
      file: state=directory path=/var/www/{{ project_name }}

    - name: Update the project directory.
      file: group={{ user }} owner={{ user }} mode=755 state=directory path=/var/www/{{ project_name }}


    - name: Build WAR with maven
      shell: mvn clean install -DskipTests chdir={{ project_root }}/code/code/bps/services
      #ignore_errors: yes
      environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-i386
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

    - name: Copy webroot files
      shell: mvn clean install -DskipTests chdir={{ project_root }}/code/webcontent
      sudo: yes
      #ignore_errors: yes
      environment:
        JAVA_HOME: /usr/lib/jvm/java-6-openjdk-i386
        BPS_JEESERVER_HOME: /var/lib/tomcat6/
        BPS_WEBROOT: "/var/www/{{ project_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASSWORD: "{{ db_password }}"
        BPS_CORPORA : "{{ project_root }}/corpora"
        CLASSPATH: /usr/share/java/mysql.jar:$CLASSPATH

    #- name: Create the DB
    #    shell: mvn create_db

    - name: Change ownership of  web directory.
      file: group=www-data owner=www-data mode=755 state=directory path=/var/www/{{ project_name }} recurse=yes

    - name: Install Apache configuration file.
      template: src=files/apache2/bps.j2 dest=/etc/apache2/sites-available/{{ project_name }} backup=yes

    - name: Ensure that the default site is disabled
      command: rm /etc/apache2/sites-enabled/000-default removes=/etc/apache2/sites-enabled/000-default

    - name: make site available 
      file: src=/etc/apache2/sites-available/{{ project_name }} dest=/etc/apache2/sites-enabled/{{ project_name }} state=link
      notify: restart apache2



  handlers:
  - name: restart apache2
    service: name=apache2 state=restarted